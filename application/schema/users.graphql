type UserData {
	username: String!
	display_name: String!
	theme: UserTheme_!
	perms: [String!]!
	last_login: DateTime
	groups: [String!]
	disabled_modules: [String!]!
	email: String!
}

type UserMinData {
	username: String!
	display_name: String!
	last_login: DateTime
}

type UserExistsError {
	message: String!
}

type UserDoesNotExistError {
	message: String!
}

type BadUserNameError {
	message: String!
}

type InsufficientPerms {
	message: String!
}

type UserTheme_ {
	colors: [ThemeColor_!]
	sizes: [ThemeSize_!]
}

type ThemeColor_ {
	name: String!
	value: Color!
}

type ThemeSize_ {
	name: String!
	value: Size!
}

input UserTheme {
	colors: [ThemeColor!]!
	sizes: [ThemeSize!]!
}

input ThemeColor {
	name: String!
	value: Color!
}

input ThemeSize {
	name: String!
	value: Size!
}

union UserQueryReponse = UserData | UserDoesNotExistError | InsufficientPerms
union UserCreateResponse = UserData | BadUserNameError | UserExistsError | InsufficientPerms
union UserDeleteResponse = UserData | UserDoesNotExistError | InsufficientPerms
union UserUpdateResponse = UserData | UserDoesNotExistError | InsufficientPerms
union UserRenameResponse = UserData | BadUserNameError | UserDoesNotExistError | UserExistsError | InsufficientPerms

#Resolvers below this line:

extend type Query {
	getUser(username: String!): UserQueryReponse!
	listUsers(restrict: Boolean!): [UserMinData!]!
	countSessions(username: String!): Int!
}

extend type Mutation {
	createUser(username: String!, password: String!, groups: [String!]!): UserCreateResponse!
	deleteUser(username: String!): UserDeleteResponse!
	updateUserTheme(username: String!, theme: UserTheme!): UserUpdateResponse!
	deleteUserTheme(username: String!): UserUpdateResponse!
	updateUserPerms(username: String!, perms: [String!]!): UserUpdateResponse!
	revokeSessions(username: String!): Int!
	updateUserPassword(username: String!, password: String!): UserUpdateResponse!
	updateUsername(username: String!, newvalue: String!): UserRenameResponse!
	updateUserDisplayName(username: String!, display_name: String!): UserUpdateResponse!
	updateUserGroups(username: String!, groups: [String!]!): UserUpdateResponse!
	updateUserModule(username: String!, module: String!, disabled: Boolean!): UserUpdateResponse!
	updateUserEmail(username: String!, email: String!): UserUpdateResponse!

	exportUserData(username: String!): BlobZipResponse!
}
